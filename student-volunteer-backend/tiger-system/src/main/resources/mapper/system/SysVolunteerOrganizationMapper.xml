<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tiger.system.mapper.SysVolunteerOrganizationMapper">
    
    <resultMap type="SysVolunteerOrganization" id="SysVolunteerOrganizationResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="introduce"    column="introduce"    />
        <result property="extra"    column="extra"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectSysVolunteerOrganizationVo">
        select id, name, introduce, extra, create_time, update_time from sys_volunteer_organization
    </sql>

    <select id="selectSysVolunteerOrganizationList" parameterType="SysVolunteerOrganization" resultMap="SysVolunteerOrganizationResult">
        select id, name, introduce, extra, create_time, update_time from sys_volunteer_organization svo
        <if test="userId !=null">
            inner join sys_volunteer_organization_relation svor on svo.id = svor.organization_id and svor.user_id = #{userId}
       </if>
        <where>  
            <if test="name != null  and name != ''"> and svo.name like concat('%', #{name}, '%')</if>
            <if test="introduce != null  and introduce != ''"> and svo.introduce = #{introduce}</if>
            <if test="extra != null  and extra != ''"> and svo.extra = #{extra}</if>
        </where>
    </select>
    
    <select id="selectSysVolunteerOrganizationById" parameterType="Long" resultMap="SysVolunteerOrganizationResult">
        <include refid="selectSysVolunteerOrganizationVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertSysVolunteerOrganization" parameterType="SysVolunteerOrganization" useGeneratedKeys="true" keyProperty="id">
        insert into sys_volunteer_organization
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="introduce != null and introduce != ''">introduce,</if>
            <if test="extra != null">extra,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="introduce != null and introduce != ''">#{introduce},</if>
            <if test="extra != null">#{extra},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSysVolunteerOrganization" parameterType="SysVolunteerOrganization">
        update sys_volunteer_organization
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="introduce != null and introduce != ''">introduce = #{introduce},</if>
            <if test="extra != null">extra = #{extra},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSysVolunteerOrganizationById" parameterType="Long">
        delete from sys_volunteer_organization where id = #{id}
    </delete>

    <delete id="deleteSysVolunteerOrganizationByIds" parameterType="String">
        delete from sys_volunteer_organization where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>